@model VnBookLibrary.Model.Entities.Tag
@using VnBookLibrary.Model.Entities;
@using System.Globalization;
@{
    ViewBag.Title = "Sửa nhãn | VnBook";
    Layout = "~/Areas/Manage/Views/Shared/_LayoutManage.cshtml";
    List<Product> Products = (List<Product>)ViewBag.Products;
    List<Tag_Product> Tag_Products = (List<Tag_Product>)ViewBag.Tag_Products;
}
<style>
    .error {
        color: red !important;
        font-weight: normal !important;
    }
    .select2-container {
        display: block !important;
        width: 100% !important;
    }

    .select2-selection__choice {
        background: #bcffbb !important;
    }

    .select2-selection__choice__remove {
        width: 20px;
        text-align: center;
        font-size: 20px;
    }
    .select2-results__options {
        max-height: 200px!important
    }
    .select2-selection__rendered li {
        width: 199px !important;
        overflow: hidden !important;
        font-size: 12px !important
    }
</style>
<h3 class="">Sửa nhãn</h3>
<hr />
<div id="ContentViewEditTag">    
    <div id="divFormEdit">
        @using (Html.BeginForm("Edit", "Tags", FormMethod.Post))
        {
            @Html.HiddenFor(model => model.TagId);
            <div class="">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TagName, "Tên nhãn", htmlAttributes: new { @class = "control-label " })
                            <span style="color:red">*</span>
                            <div class="">
                                @Html.EditorFor(model => model.TagName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TagName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, "Mô tả", htmlAttributes: new { @class = "control-label " })
                            <div class="">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", style = "height:60px;resize:none" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.EditorFor(model => model.IsDisplay, new { htmlAttributes = new { @class = "",style="height:20px;width:20px;" } })
                            @Html.LabelFor(model => model.IsDisplay, "Hiển thị trên trang chủ", new { @class = "control-label " })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OrderDisplay, "Thứ tự hiển thị", new { @class = "control-label " })
                            <div class="">
                                @Html.EditorFor(model => model.OrderDisplay, new { htmlAttributes = new { @class = "form-control", min = "0" } })
                            </div>
                        </div>
                    </div>
                </div>
                <div style="margin-bottom:100px;">
                    <div class="panel panel-info">
                        <div class="panel-heading">
                            <h3 class="panel-title">Chọn sách vào nhãn!</h3>
                        </div>
                        <div class="panel-body" style="min-height:300px">
                            <select id="ListProductId" class="UseSelect2" name="ListProductId" multiple="multiple">
                                @foreach (var product in Products)
                                {
                                    if (Tag_Products != null && Tag_Products.Count > 0 && Tag_Products.FirstOrDefault(x => x.ProductId == product.ProductId) != null)
                                    {
                                        <option selected value="@product.ProductId">@product.ProductName</option>
                                    }
                                    else
                                    {
                                        <option value="@product.ProductId">@product.ProductName</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="form-group" style="width:100%;position:fixed;left:0px;bottom:0px;text-align:center">
                    <input type="submit" style="width:30%;margin-left:216px" value="Sửa" class="btn btn-dropbox btn-lg" />
                </div>
            </div>
        }
    </div>
    <script>
        $(document).ready(function () {
            $("#divFormEdit>form").validate({
                rules: {
                    TagName: {
                        notNull: true,
                    },
                },
                messages: {
                    TagName: {
                        notNull: 'Tên nhãn không được để trống hoăc toàn ký tự trắng',
                    },
                }
            });
            $.validator.addMethod(
                "notNull",
                function (value, element, check) {
                    if (check && value.trim() == "") {
                        return false;
                    } else {
                        return true;
                    }
                },
                "Không được để trống hoăc toàn ký tự trắng"
            );
        })
    </script>
</div>
<script>
    $(document).ready(function () {

    })
</script>